import {
  StyleSheet,
  Text,
  View,
  TextInput,
  TouchableOpacity,
} from "react-native";
import { NavigationContainer } from "@react-navigation/native";
import { createNativeStackNavigator } from "@react-navigation/native-stack";
import React, { useState, useEffect } from "react";
import BeginScreen from "./screens/BeginScreen";
import CreateAnAccountScreen from "./screens/CreateAnAccountScreen";
import SearchHomeScreen from "./screens/SearchHomeScreen";
import SearchScreen from "./screens/SearchScreen";
import LocationDetailScreen from "./screens/LocationDetailScreen";
import FavoriteHomeScreen from "./screens/FavoriteHomeScreen";
import FacilitiesAndServicesScreen from "./screens/FacilitiesAndServicesScreen";
import ReviewsScreen from "./screens/ReviewsScreen";
import ConfirmAndPayScreen from "./screens/ConfirmAndPayScreen";
import PaymentSuccessScreen from "./screens/PaymentSuccessScreen";
import BookingHomeScreen from "./screens/BookingHomeScreen";
import BookingLocationDetailScreen from "./screens/BookingLocationDetailScreeen";
import Login from "./screens/Login";
import Register from "./screens/Register";
import Profile from "./screens/ProfileScreen";
import { getFirestore, collection, getDocs } from "firebase/firestore";
import {db} from "./firebaseConfig"
const Stack = createNativeStackNavigator();

export default function App() {
  const [accommodations, setAccommodations] = useState([]); // state to hold API data
  const updateData = (updatedItems) => {
    setAccommodations(updatedItems);
  };
  
  // useEffect(() => {
  //   fetch("https://672af17b976a834dd024f697.mockapi.io/accomodation") // Replace 'localhost' with your IP address if needed
  //     .then((response) => response.json())
  //     .then((data) => setAccommodations(data))
  //     .catch((error) => console.error(error));
  // }, []);

  useEffect(() => {
    const fetchAccommodations = async () => {
      try {
        console.log("Firestore DB:", db);
  
        const accommodationsCollection = collection(db, "accommodations");
        console.log("Collection Reference:", accommodationsCollection);
  
        const querySnapshot = await getDocs(accommodationsCollection);
        if (querySnapshot.empty) {
          console.warn("No documents found in 'accommodations'");
        }
  
        const data = querySnapshot.docs.map((doc) => ({
          id: doc.id,
          ...doc.data(),
        }));
        console.log("Fetched Data:", data);
  
        setAccommodations(data);
      } catch (error) {
        console.error("Error fetching data from Firestore:", error);
      }
    };
  
    fetchAccommodations();
  }, []);
  
  
  

  const [paymentData, setPaymentData] = useState([
    { id: '24', amount: '1200', date: '2024-11-16', time: '12:00 PM' },
    { id: '11', amount: '300', date: '2024-11-13', time: '12:00 PM' },
    { id: '22', amount: '1200', date: '2024-11-14', time: '12:00 PM' },
    { id: '12', amount: '300', date: '2024-11-15', time: '12:00 PM' },
  ]);

  
  return (
    <NavigationContainer>
      <Stack.Navigator
        initialRouteName="Create An Account Screen"
        screenOptions={{ headerShown: false }}
      >
        <Stack.Screen name="Begin Screen" component={BeginScreen} />
        <Stack.Screen
          name="Create An Account Screen"
          component={CreateAnAccountScreen}
        />
        <Stack.Screen
          name="Register"
          component={Register}
        />
        <Stack.Screen
          name="Login"
          component={Login}
        />
        <Stack.Screen
          name="Profile Home Screen"
          component={Profile}
        />
        <Stack.Screen name="Search Home Screen">
          {(props) => (
            <SearchHomeScreen
              {...props}
              data={accommodations}
              updateData={updateData}
            />
          )}
        </Stack.Screen>
        <Stack.Screen name="Favorite Home Screen">
          {(props) => (
            <FavoriteHomeScreen
              {...props}
              data={accommodations}
              updateData={updateData}
            />
          )}
        </Stack.Screen>
        <Stack.Screen name="Search Screen" component={SearchScreen} />
        <Stack.Screen
          name="Location Detail Screen"
          component={LocationDetailScreen}
        />
        <Stack.Screen
          name="Facilities And Services Screen"
          component={FacilitiesAndServicesScreen}
        />
        <Stack.Screen name="Reviews Screen" component={ReviewsScreen} />
        <Stack.Screen name="Confirm And Pay Screen">
          {(props) => (
            <ConfirmAndPayScreen {...props} paymentData={paymentData} />
          )}
        </Stack.Screen>
        <Stack.Screen
          name="Payment Success Screen"
          component={PaymentSuccessScreen}
        />
         <Stack.Screen name="Booking Home Screen">
          {(props) => (
            <BookingHomeScreen
              {...props}
              data={accommodations}
              paymentData={paymentData}
            />
          )}
        </Stack.Screen>
        <Stack.Screen name="Booking Location Detail Screen">
          {(props) => (
            <BookingLocationDetailScreen
              {...props}
              paymentData={paymentData}
            />
          )}
        </Stack.Screen>
      </Stack.Navigator>
    </NavigationContainer>
  );
}
